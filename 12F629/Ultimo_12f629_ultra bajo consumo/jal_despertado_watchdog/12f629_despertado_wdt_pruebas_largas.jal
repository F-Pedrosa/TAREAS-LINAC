; Este firmware se utilizó para pruebas en las que el micro estaba dormido y era despertado periódicamente por su watchdog
; interno, activaba una carga, pasado un tiempo dado la desactivaba y volvía a estado dormido.

include 12f629                     -- target PICmicro

pragma target clock 4_000_000      -- oscillator frequency

pragma target OSC      INTOSC_NOCLKOUT
pragma target BROWNOUT DISABLED                  -- no brownout reset
pragma target MCLR     INTERNAL
--
enable_digital_io()                 -- make all pins digital I/O
OPTION_REG = 0b00001110             ; ajuste del prescaler del watchdog para que de unos 1,1 seg


; Definición del pin al que se conectaba la plaqueta lejana (la que manejaba una carga de 220 Vac, que incluía un
; transformador arañesco).
alias carga is pin_GP0
carga = off
pin_GP0_direction = OUTPUT


; este es solamente un testigo extra
alias led is pin_GP2
led = off
pin_GP2_direction = OUTPUT

; el otro pin que se ha usado como salida, para estas pruebas se deja apagado.
pin_GP1_direction = OUTPUT
alias salida5 is pin_GP1
; salidas apagadas
salida5 = off


include delay

const byte encendido1 = 20  ; aproximadamente 10 segs


; titilar el testigo como indicio de arranque, esto podría eliminarse si no hace falta
carga = off
delay_100ms(10)
led = on
delay_100ms(4)
led = off
carga = off




;25 ..... 35 s
;52 .... 73 s
;1286 ... 1820 s
;5133 ... 2 hr 1' 22" = 7282 s
const word tiempo = 25

forever loop

  ; Este lazo crea un tiempo dormido más largo porque el tiempo del watchdog son unos
  ; 1,1 segundos, entonces con este lazo lo mantenemos más tiempo en "dormido"
  for tiempo loop
      asm sleep
  end loop

  ; se despertó, activar la carga
  carga = on
  ; durante un tiempo predefinido arriba (en medios segundos, por cuestiones internas)
  for encendido1 loop
      delay_100ms(5)
      asm CLRWDT
  end loop
  carga = off
  asm CLRWDT



end loop


