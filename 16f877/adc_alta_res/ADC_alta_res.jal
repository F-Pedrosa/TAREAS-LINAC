; Firmware de ejemplo para adquisición 12 bits ADC del 16F877

; Biblioteca de definiciones generales básicas.
include jal_v2_16F877
; Librería para acceder al RTC y a EEPROM externas
include i2c_sw_fep

; Parámetros de uso de la USART interna del F877:
const USART_HW_Serial     = true     ; True = RS232
; Definir bps (debe coincidir con la PC), se ha verificado experimentalmente que se tiene una
; comunicación correcta hasta con velocidades de 115200 bps (cable de no más de un par de mts).
const Serial_HW_Baudrate  = 115_200
; Librería que permite utilizar la USART interna del F877
include serial_hardware

pin_b7_direction = output    ; led testigo y zumbador
pin_d0_direction = output    ; control relé pila RTC
pin_d1_direction = input     ; sensado de lector conectado

; Aliases de estos pines
var bit testigo is pin_b7
var bit rele_pila_rtc is pin_d0
var bit lector_conectado is pin_d1


; ********************** SUBRUTINAS *******************************

; Para convertir un word en 4 dígitos separados.
procedure word2digits( byte out dig3, byte out dig2, byte out dig1, byte out dig0, word in numero ) is

   var word miles = 0
   var byte centena = 0
   var byte decena = 0

   miles = numero / 1000
   dig3 = byte(miles)
   miles = miles * 1000
   numero = numero - miles
   centena = byte(numero / 100)
   dig2 = centena
   centena = dig2 * 100
   numero = numero - centena
   decena = byte(numero / 10)
   dig1 = decena
   decena = dig1 * 10
   numero = numero - decena
   dig0 = byte(numero)

end procedure

; Rutina para enviar un retorno de carro y fin de línea via RS232...
procedure CR_LF is
   Serial_HW_Write(13)
   Serial_HW_Write(10)
end procedure

; ======================================= PRINCIPAL =======================================
rele_pila_rtc = off
; Activar el convertidor A/D del puerto A
Adc_on
; Inicializar la USART interna del 16F877
Serial_HW_init

testigo = on
delay_100ms(10)
testigo = off

forever loop

   var byte data = 0
   var byte y = 0

   var byte digi3 = 0
   var byte digi2 = 0
   var byte digi1 = 0
   var byte digi0 = 0

   var word datazo = 0

   ; si llega el pedido desde la PC, leer registro(s) y enviar
   if Serial_HW_read(data) then
      ; leer
      if data == "a" then
           datazo = ADC_read(1)
           word2digits(digi3,digi2,digi1,digi0,datazo)
           Serial_HW_Write(digi3+48)
           Serial_HW_Write(digi2+48)
           Serial_HW_Write(digi1+48)
           Serial_HW_Write(digi0+48)
           CR_LF
      elsif data == "1" then
           Serial_HW_Write("O")
           Serial_HW_Write("K")
           Serial_HW_Write("!")
           CR_LF
      end if
   end if

end loop
