; Código de prueba para el master 18f4620 en AME a comunicarse con esclavo por la línea de 12 Vdc
include 18f4620

pragma target clock 20_000_000
pragma target PWRTE  enabled          ; power up timer enabled
pragma target OSC      HS             ; crystal or resonator
pragma target WDT      CONTROl        ; watchdog
pragma target XINST    DISABLED       ; extended instruction set
pragma target DEBUG    DISABLED       ; debugging
pragma target BROWNOUT DISABLED       ; brownout reset
pragma target FCMEN    DISABLED       ; clock monitoring
pragma target IESO     DISABLED       ; int/ext osc. switch
pragma target LVP      DISABLED       ; low voltage programming
pragma target MCLR     INTERNAL       ; E.3 habilitado

WDTCON_SWDTEN = OFF                 ; disable WDT
OSCCON_SCS = 0                      ; select primary oscillator
OSCTUNE_PLLEN = FALSE               ; no PLL

enable_digital_io()                   ; todos los pines como I/O digitales en el arranque

include delay
include pwm_hardware
include libreria_pulsos

procedure mandar_byte(byte in dato) is
   var bit bit0 at dato : 0
   var bit bit1 at dato : 1
   var bit bit2 at dato : 2
   var bit bit3 at dato : 3
   var bit bit4 at dato : 4
   var bit bit5 at dato : 5
   var bit bit6 at dato : 6
   var bit bit7 at dato : 7
   
   if bit7 == 1 then
      corto
   else
      largo
   end if
   espacio
   if bit6 == 1 then
      corto
   else
      largo
   end if
   espacio
   if bit5 == 1 then
      corto
   else
      largo
   end if
   espacio
   if bit4 == 1 then
      corto
   else
      largo
   end if
   espacio
   if bit3 == 1 then
      corto
   else
      largo
   end if
   espacio
   if bit2 == 1 then
      corto
   else
      largo
   end if
   espacio
   if bit1 == 1 then
      corto
   else
      largo
   end if
   espacio
   if bit0 == 1 then
      corto
   else
      largo
   end if
   espacio
   final
end procedure


; -------------------------------------------------------------------------------------------------
;pwm_set_frequency(300_000)
pwm_set_frequency(100_000)
pwm1_set_dutycycle_percent(50)

alias testigo is pin_b7
pin_b7_direction = output
alias zumbador is pin_d2
pin_d2_direction = output

alias salida_pwm is pin_c2
pin_c2_direction =  output

; ======================================================================================================================
pwm1_off
salida_pwm = off
; testigo de funcionamiento
testigo = on
zumbador = on
delay_100ms(5)
testigo = off
zumbador = off

delay_100ms(15)            ; para esperar que arranque los clientes


var byte contador = 0



;pwm1_on

forever loop

;      ; mandamos 8 pulsos (que deberían armar un byte)
;      corto           ; 1
;      espacio
;      largo           ; 0
;      espacio
;      corto           ; 1
;      espacio
;      largo           ; 0
;      espacio
;      corto           ; 1
;      espacio
;      largo           ; 0
;      espacio
;      corto           ; 1
;      espacio
;      largo           ; 0
;      espacio
;      final

      mandar_byte(contador)
      contador = contador + 1

;      corto
;      delay_100ms(15)                    ; cada 1/2 segundo...
;      corto
;      delay_100ms(15)                    ; cada 1/2 segundo...
;      largo
;      delay_100ms(15)                    ; cada 1/2 segundo...
;      largo
;      delay_100ms(15)                    ; cada 1/2 segundo...


;      corto           ; 1
;      espacio
;      largo           ; 0
;      espacio
;      final
;      delay_1ms(30)




;      delay_100ms(15)                    ; cada 1/2 segundo...
;      final
      delay_100ms(15)                    ; cada 1/2 segundo...

      
end loop


